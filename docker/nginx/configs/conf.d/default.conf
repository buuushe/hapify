# Disable server version disclosure
server_tokens off;

# Limit access to directories
location ~ /\. {
    deny all;
}

# Deny access to configuration files
location ~ /\.conf {
    deny all;
}

# Limit access to files starting with a dot (e.g., .htaccess)
location ~ /\.(?!well-known) {
    deny all;
}

# Restrict HTTP methods for security
if ($request_method !~ ^(GET|HEAD|POST)$) {
    return 405;
}

# Disable execution of PHP scripts in all directories
location ~ \.php$ {
    deny all;
}

# Limit directory access if there's no index file
location / {
    try_files $uri $uri/ =404;
}

# Deny access to specific files (e.g., password files)
location /restricted-file {
    deny all;
}

# Set "X-Content-Type-Options" header to prevent MIME-type sniffing
add_header X-Content-Type-Options nosniff;

# Set "X-Frame-Options" header to prevent clickjacking
add_header X-Frame-Options "SAMEORIGIN";

# Set "X-XSS-Protection" header to prevent cross-site scripting attacks
add_header X-XSS-Protection "1; mode=block";

# Deny external linking to resources from your site
valid_referers none blocked server_names ~\.google\.;

# Deny access to /.git directory
location ~ /\.git {
    deny all;
}

# Limit request size
client_max_body_size 10M;

# SSL/TLS settings (if using HTTPS)
#ssl_protocols TLSv1.2 TLSv1.3;
#ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
#ssl_prefer_server_ciphers off;

# SSL/TLS certificate and key paths (replace with your own)
#ssl_certificate /etc/nginx/ssl/server.crt;
#ssl_certificate_key /etc/nginx/ssl/server.key;

# SSL/TLS session settings
#ssl_session_timeout 1d;
#ssl_session_cache shared:SSL:50m;
#ssl_session_tickets off;

# Deny outdated SSL protocols
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#ssl_prefer_server_ciphers on;

# SSL/TLS certificates
#ssl_certificate /etc/nginx/ssl/server.crt;
#ssl_certificate_key /etc/nginx/ssl/server.key;

# Access control for specific IP address or network (replace with your own)
#allow 192.168.1.0/24;
#deny all;

# Configuration for Strict-Transport-Security (HSTS) header
#add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

# Configuration for Content Security Policy (CSP) header
#add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ajax.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://www.google-analytics.com; font-src 'self' https://fonts.gstatic.com;";

# Configuration for Referrer-Policy header
#add_header Referrer-Policy "no-referrer";

# Configuration for Feature-Policy header
#add_header Feature-Policy "vibrate 'none'; geolocation 'none'";

# Configuration for Cross-Origin Embedder Policy (COEP) header
#add_header Cross-Origin-Embedder-Policy "require-corp";

# Configuration for Cross-Origin Opener Policy (COOP) header
#add_header Cross-Origin-Opener-Policy "same-origin";

# Configuration for Cross-Origin Resource Policy (CORP) header
#add_header Cross-Origin-Resource-Policy "same-origin";

# Error logging
#error_log /var/log/nginx/error.log;
#error_page 404 /404.html;

# User and group under which Nginx runs (replace with your values, typically www-data)
#user www-data;
#group www-data;

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    charset utf-8;
    server_tokens off;

    root /var/www/public;
    index index.php index.html index.htm;

    client_max_body_size 32M;

    add_header "Access-Control-Allow-Origin" "*" always;
    add_header "Access-Control-Allow-Headers" "Content-type, Authorization, X-Requested-With, Accept" always;
    add_header "Access-Control-Allow-Methods" "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #fixes timeouts
        fastcgi_read_timeout 600;
        set_real_ip_from 127.0.0.1/32;
        real_ip_header X-Forwarded-For;
        include fastcgi_params;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}